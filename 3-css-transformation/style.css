#container {
    background-color: red;
    height: 300px;
    width: 600px;
    display: flex;
    justify-content: center;
    align-items: center;

    /* *********** DEBUT DU CODE *********** */
    /* positionner l'élément au milieu de l'écran */
    /* on met position à absolue , est l'élément sera positionné par rapport à l'élément ancètre qui la position absolue */
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    /* ***********FIN DU CODE************ */

    /* ANIMATION 3D */
    /* perspective : distance entre la caméra(vision) et l'élément */
    /* valeur peut aller de 0 à ..... */
    perspective: 300px;

    /* l'angle de déplacement : accepte deux valeurs possibles */
    /* valeurs possibles: left, right , center , bottom ,top , % ....  */
    perspective-origin: left, bottom;
    /* autre possibilité ⬇️ */
    perspective-origin: 50%, 50%;
}

#box {
    background-color: green;
    height: 45%;
    width: 45%;

    /* **************** LES ANIMATIONS 2D **************** */

    /* ========= ROTATION ========= */
    /* ***** DEBUT CODE *****  */
    /* transform: rotate(90deg);   */
     /* ***** FIN CODE  */



    /* ========= Translation ========= */
    /* ***** DEBUT CODE ***** */
    /* transform: translateX(200px);
    transform: translateY(200px); */
    /* ***** FIN CODE ***** */

    /* les deux lignes de codes ci-dessous sont pareils */
    /* ***** DEBUT CODE ***** */
    /* transform: translate(50px, 200px);
    transform: translateX(50px) translateY(200px); */
    /* ***** FIN CODE ***** */


    /* ========= Scale ========= */

    /* 1ere façon */
    /* ***** DEBUT CODE ***** */
    /* transform: scaleX(2);
    transform: scaleY(2); */
    /* ***** FIN CODE ***** */

    /* 2eme façon */
    /* ***** DEBUT CODE ***** */
    /* transform: scale(3); */
    /* ***** FIN CODE ***** */


    /* ****************** ANIMATION 3D  *******************/
    /* ***** DEBUT CODE ***** */
    /* transform: translateZ(50px); */
    /* ***** FIN CODE ***** */

    /* il faut utiliser translate3d pour translater un élément dans l'éspace 3D */
    /* ***** DEBUT CODE ***** */
    /* transform: translate3d(50px,100px, 70px); */
    /* ***** FIN CODE ***** */


}



/* **************** LES ANIMATIONS 2D **************** */
#rect{
    height: 50px;
    width: 300px;
    margin: 5% 5%;
    background-color: crimson;
    border-radius: 15px;

    /* ======= ANIMATION COLORIAGE ======= */
    
    animation-name: colorier;

    /* animation duration : secondes ou millisecondes */
    animation-duration: 3000ms; 
   

}

@keyframes colorier{ 

    /* 0% , 20% , 40% , 60% , 80% , 100% */
    0%{
        background-color: crimson;
    }
    20%{ /* 20% de 3000ms c'est : 600ms*/
        background-color: rgb(222, 22, 149);
    }
    40%{/* 1200ms*/
        background-color: rgb(205, 22, 222);
    }
    60%{ /* 1800ms*/
        background-color: rgb(142, 22, 222);
    }
    80%{ /* 2400ms*/
        background-color: rgb(72, 22, 222);
    }
    100%{ /* 3000ms*/
        background-color: darkblue;
    }
}


/* ======= ANIMATION HOVER =======*/
/* **** 1ere méthode **** */
/* #rect:hover{
    transform: scale(1.5);
    transition: all ease 0.5s;
} */

/* **** 2eme méthode ***** */
#rect:hover{
    /* définisez le nom de l'animation et la durée : 0.8s */
    animation-name: agrandir;
    animation-duration: 0.8s;
    /* animation fill mode : forwards => permet d'éviter la réinitialisation 
    les styles ne reviennent pas à l'état initial */
    animation-fill-mode: forwards;
}

@keyframes agrandir{
    0%{
        transform: scale(1);
    }
    50%{
        /* scale => width * 1.5 ; height * 1.5 */
        transform: scale(1.5);
        background-color: hsl(348, 83%, 60%);
    }
    100%{
        transform: scale(2);
        background-color: blue;
    }

    /* sans le animation-fill-mode forwards => après 100% l'élément revient à son état initial */
    /* avec le animation-fill-mode forwards => après 100% les styles ne se re-initialise pas*/
   
}

#rect{
     /* animation fill mode : forwards permet d'éviter la réinitialisation des propriètés css  */
    animation-fill-mode: forwards;
}




/* ============ FAIRE BOUGER L'ELEMENT DE HAUT VERS LA BAS PUIS LE FAIRE REVENIR ============== */
#rect{
    position: relative;
    /* LE CODE pour nommer l'animation , et pour preciser la durée 👇*/   
    /* animation-name: bouge2;
    animation-duration: 7s; */
}


/* le code qui permet de définir l'animation 👇 */
@keyframes bouge{
    0%{
        transform: translateY(0px);
        
    }
    50%{
        transform: translateY(200px);
        opacity: 50%;
    }
    100%{
        transform: translateY(0px);
    }
}

@keyframes bouge2{
    0%{
       top: 0px;
        
    }
    50%{
        top: 200px;
        opacity: 50%;
    }
    100%{
        top: 0px;
    }
}

#ball{
    width: 150px;
    height: 150px;
    border-radius: 50%;
    margin: auto;
    /* background: linear-gradient(35deg, #ccffff, #ffcccc ); */
    background: linear-gradient(120deg, crimson, cyan );

    animation-name: rebondir;
    animation-duration: 1.5s;
    
    /* animation-iteration-count: 5; */
    animation-iteration-count: infinite;
}
@keyframes rebondir{
    0%{
        transform: translateY(0px);
        
    }
    50%{
        transform: translateY(250px);
        width: 190px;
        height: 90px;
    }
    100%{
        transform: translateY(0px);
    }
}
